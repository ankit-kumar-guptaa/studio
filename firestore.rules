rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Public read access for job seekers, write access is restricted to owner or Super Admin.
     */
    match /jobSeekers/{jobSeekerId} {
      allow read: if true;
      // Allow create if user is owner, or if super admin is creating
      allow create: if isOwner(jobSeekerId) || request.auth == null; 
      allow update: if isOwner(jobSeekerId) || request.auth == null;
      allow delete: if isOwner(jobSeekerId) || request.auth == null;
    }
    
    match /jobSeekers/{jobSeekerId}/{documents=**} {
      allow read, write: if isOwner(jobSeekerId) || request.auth == null;
    }

    /**
     * @description Public read access for employers, write access is restricted.
     */
    match /employers/{employerId} {
       function isExistingOwner() {
            return isOwner(employerId) && resource.data != null;
        }
      allow read: if true;
      allow create: if isOwner(employerId) || request.auth == null;
      allow update: if isExistingOwner() || request.auth == null;
      allow delete: if isExistingOwner() || request.auth == null;
    }

    /**
     * @description Employer's own job posts. Write restricted to owner or admin.
     */
    match /employers/{employerId}/jobPosts/{jobPostId} {
      allow read, write: if isOwner(employerId) || request.auth == null;
    }

    /**
     * @description Applications for a specific job post.
     * Regular employers can read/update/delete.
     * Job seekers can only create.
     */
    match /employers/{employerId}/jobPosts/{jobPostId}/applications/{applicationId} {
      function isJobSeekerOwner() {
          return isSignedIn() && request.auth.uid == request.resource.data.jobSeekerId;
      }
      allow read, update, delete: if isOwner(employerId);
      allow create: if isJobSeekerOwner();
    }


    /**
     * @description Public read for all jobs. Write access is restricted to owners or Super Admin.
     */
    match /jobPosts/{jobPostId} {
        allow read: if true;
        // Allow create if user is signed in OR if the job is being posted by SUPER_ADMIN
        allow create: if (isSignedIn() && request.resource.data.employerId == request.auth.uid) || request.resource.data.employerId == 'SUPER_ADMIN';
        // Allow update/delete for owner or super admin
        allow update, delete: if (isSignedIn() && resource.data.employerId == request.auth.uid) || request.auth == null;
    }
    
    /**
     * @description Applications for SUPER_ADMIN job posts.
     * Super admin can read/update/delete.
     * Job seekers can only create.
     */
    match /jobPosts/{jobPostId}/applications/{applicationId} {
        function isJobSeekerOwner() {
          return isSignedIn() && request.auth.uid == request.resource.data.jobSeekerId;
        }
       allow read, update, delete: if request.auth == null; // Allows super admin full control
       allow create: if isJobSeekerOwner(); // Job seekers can apply
    }


    /**
     * @description Public read for blogs. Write access for admins only.
     */
    match /blogs/{blogId} {
      allow read: if true;
      allow create, update, delete: if request.auth == null; // Allow admins to write
    }

    /**
     * @description Public read for reviews. Logged-in users can create.
     */
    match /companyReviews/{companyReviewId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow write: if false; // Can be changed to allow admins/owners
    }
  }
}
